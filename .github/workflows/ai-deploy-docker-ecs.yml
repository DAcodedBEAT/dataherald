name: AI Deploy Docker Image to ECS

on:
  workflow_call:
    secrets:
      SUBMODULE_UPDATE_TOKEN:
        description: "Token to update submodules"
        required: true
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true

    inputs:
      target_env:
        description: "The target environment"
        required: true
        type: string
      docker_image:
        description: "Docker image"
        required: true
        type: string
      ecs_service_name:
        description: "The ECS service name"
        required: true
        type: string
      ecs_task_definition:
        description: "The ECS task definition"
        required: true
        type: string
      container_name:
        description: "The container name to update in the ECS service task definition"
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: k2
  ECS_SERVICE: ${{ inputs.ecs_service_name }}
  CONTAINER_NAME: ${{ inputs.container_name }}
  ECS_TASK_DEFINITION: ${{ inputs.ecs_task_definition }}

jobs:
  deploy-to-ecs:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_UPDATE_TOKEN }}
          submodules: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ inputs.docker_image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
